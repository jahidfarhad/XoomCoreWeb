@using XoomCore.Application.RequestModels

@{
	ViewData["Title"] = "Home Page";
}

<button type="button" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary" id="registerBtn" data-mdb-modal-init data-mdb-target="#registerModal">
	Registration Form Modal
</button>

<div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog d-flex justify-content-center">
		<div class="modal-content w-75">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel2">Registration Form</h5>
				<button type="button" data-mdb-button-init data-mdb-ripple-init class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body p-4">
				<form id="registrationForm" class="g-3 needs-validation" novalidate>

					<div class="form-outline mb-3">
				 		<label for="textFirstName" class="form-label">First Name</label>
				 		<input type="text" class="form-control" id="textFirstName" required>
				 	</div>

					<div class="form-outline mb-3">
				 		<label for="textLastName" class="form-label">Last Name</label>
				 		<input type="text" class="form-control" id="textLastName" required>
				 	</div>

					<div class="form-outline mb-3">
				 		<label for="textBirthDate" class="form-label">Date of Birth</label>
				 		<input type="date" class="form-control" id="textBirthDate" required>
				 	</div>

					<div class="form-outline mb-3">
				 		<label for="textEmail" class="form-label">Email</label>
				 		<input type="text" class="form-control" id="textEmail" required>
				 	</div>

					<div class="form-outline mb-3">
				 		<label for="numPhone" class="form-label">Phone</label>
				 		<input type="number" class="form-control" id="numPhone" required>
				 	</div>

					<div class="form-outline mb-3">
				 		<label for="textCity" class="form-label">City</label>
				 		<select class="form-select" id="textCity" required>
				 			<option selected disabled value="">Choose...</option>
				 			<option>Dhaka</option>
				 			<option>Chittagon</option>
				 			<option>Khulna</option>
				 			<option>Rajshahi</option>
				 			<option>Sylhet</option>
				 		</select>
				 		@*<div class="invalid-feedback">
				 			Please select a valid state
				 		</div>*@
				 	</div>

				 	<br />

				 	<div class="col-12">
				 		<button id="click_button" class="btn btn-primary" type="submit">Submit Form</button>
				 	</div>

				 </form>
			</div>
		</div>
	</div>
</div>

@model List<MyModel>

@* <!DOCTYPE html> *@
@* <html lang="en"> *@
@* <head> *@
@* 	<meta charset="UTF-8"> *@
@* 	<meta name="viewport" content="width=device-width, initial-scale=1.0"> *@
@* 	<title>Bootstrap Table Example</title> *@
	<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
@* </head> *@
@* <body> *@
	<div class="container">
		<h2 class="my-4">User Data</h2>
		<table class="table table-striped">
			<thead>
				<tr>
					<th>ID</th>
					<th>Name</th>
					<th>Age</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>@item.Id</td>
						<td>@item.Name</td>
						<td>@item.Age</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
@* </body> *@
@* </html> *@


@* <form id="registrationForm" class="g-3 needs-validation" novalidate> *@

@* 	<div class="col-md-4"> *@
@* 		<label for="textFirstName" class="form-label">First Name</label> *@
@* 		<input type="text" class="form-control" id="textFirstName" required> *@
@* 	</div> *@

@* 	<div class="col-md-4"> *@
@* 		<label for="textLastName" class="form-label">Last Name</label> *@
@* 		<input type="text" class="form-control" id="textLastName" required> *@
@* 	</div> *@

@* 	<div class="col-md-4"> *@
@* 		<label for="textBirthDate" class="form-label">Date of Birth</label> *@
@* 		<input type="date" class="form-control" id="textBirthDate" required> *@
@* 	</div> *@

@* 	<div class="col-md-4"> *@
@* 		<label for="textEmail" class="form-label">Email</label> *@
@* 		<input type="text" class="form-control" id="textEmail" required> *@
@* 	</div> *@

@* 	<div class="col-md-4"> *@
@* 		<label for="numPhone" class="form-label">Phone</label> *@
@* 		<input type="number" class="form-control" id="numPhone" required> *@
@* 	</div> *@

@* 	<div class="col-md-4"> *@
@* 		<label for="textCity" class="form-label">City</label> *@
@* 		<select class="form-select" id="textCity" required> *@
@* 			<option selected disabled value="">Choose...</option> *@
@* 			<option>Dhaka</option> *@
@* 			<option>Chittagon</option> *@
@* 			<option>Khulna</option> *@
@* 			<option>Rajshahi</option> *@
@* 			<option>Sylhet</option> *@
@* 		</select> *@
@* 		<div class="invalid-feedback"> *@
@* 			Please select a valid state. *@
@* 		</div> *@
@* 	</div> *@

@* 	<br /> *@

@* 	<div class="col-12"> *@
@* 		<button id="click_button" class="btn btn-primary" type="submit">Submit Form</button> *@
@* 	</div> *@

@* </form> *@

@section scripts {

	<script>
		$(document).ready(function () {
			console.log("Hello World!");
		});

		$("#registerBtn").click(function(e){
			e.preventDefault();

			$('#registerModal').modal('show')

		});

		$("#registrationForm").submit(async function(e){
			e.preventDefault();
			var form = document.getElementById("registrationForm");
			if (!form.checkValidity()) {
				e.stopPropagation();
			}
			else
			{

				let createRequest={
					FirstName:$("#textFirstName").val(),
					LastName:$("#textLastName").val(),
					BirthDate:$("#textBirthDate").val(),
					Email:$("#textEmail").val(),
					Phone:$("#numPhone").val(),
					City:$("#textCity").val()
				}
				console.log(createRequest);
				// Fetch menu data using sendRequest
				const url = "/CreateEmployeeRequest";

				try {

					const options = {
						method: "POST",
						headers: {
							'Content-Type': 'application/json'
						}
					};
					if (createRequest) {
						options.body = JSON.stringify(createRequest);
					}
					const response = await fetch(url, options);

					if (!response.ok) {
						throw new Error(`HTTP error! status: ${response.status}`);
					}
					const result = await response.json();
					//return result;
					console.log("result",result);

					if (!result.isValid) {
						alert("Error")
						//showToast(response.responseCode, response.messageType, response.message);
					}
					else {
						alert("Submitted")
					}
				} catch (error) {
					console.error(error);
				}

			};
		});

		$("#click_button").click(function(){
			console.log("Button Clicked");

			let showInfo={
				FirstName:$("#textFirstName").val(),
				LastName:$("#textLastName").val(),
				BirthDate:$("#textBirthDate").val(),
				Email:$("#textEmail").val(),
				Phone:$("#numPhone").val(),
				City:$("#textCity").val()
			}
			console.log(showInfo);
		});

		// Example starter JavaScript for disabling form submissions if there are invalid fields
		(() => {
		  'use strict'

		  // Fetch all the forms we want to apply custom Bootstrap validation styles to
		  const forms = document.querySelectorAll('.needs-validation')

		  // Loop over them and prevent submission
		  Array.from(forms).forEach(form => {
			form.addEventListener('submit', event => {
			  if (!form.checkValidity()) {
				event.preventDefault()
				event.stopPropagation()
			  }

			  form.classList.add('was-validated')
			}, false)
		  })
		})()
	</script>
}